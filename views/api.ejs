<nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/"><b>GeneratePassword</b></a>
      </div>

      <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
        <ul class="nav navbar-nav">
          <li><a href="/">Home</a></li>
          <li class="active"><a href="/api">API<span class="sr-only">(current)</span></a></li>
          <li><a href="/about">About</a></li>
        </ul>
      </div>
    </div>
</nav>
<div class="content">
    <div class="col-md-12">
    <h1>About Password Generator</h1>
    <div class="center-block">
        <div class="row">
            <div class=" col-md-6">
                <h2>Something About The API</h2>
                <p>Using the API is rather straight forward.</p>
                <p>The API uses the GET method. And expects the following keys;<br>
                    <ul>
                        <li><b>allowNumbers:</b> true/false</li>
            			<li><b>allowSymbols:</b> true/false</li>
            			<li><b>wordLimit:</b> integer values starting from 1 up to 1000</li>
                    </ul>
                </p>
                <p>
                    Sample code can be found below:

                    <pre>
//using jQuery
var url = "&lt;domain of this website&gt;/passwordgenerator/generator";
var getValues = {
    wordLimit : "100",
    allowNumbers : true,
    allowSymbols : true
};
$.get( url , getValues, function (data) {
    if (typeof(data.generated_password) !== 'undefined') {
        console.log(data.generated_password);
    } else {
        console.log(data.errors);
    }
});</pre>
                <p>The software uses <a href="https://nodejs.org/api/crypto.html">NodeJS's crypto library</a> generating these numbers. In fact it generates numbers twice. One for the words to be used while the other determines the position of the word within the lineup.</p>
                <br>
                <p>You can find the code on <a href="https://github.com/JohnRoach/PasswordGenerator">my GitHub repository</a>. Please make sure to read <a href="https://github.com/JohnRoach/PasswordGenerator/blob/master/LICENSE">the license(<b>ISC</b>)</a> before using the code.</p>
            </div>
        </div>
    </div>
    </div>
</div>
<br>
<div class="row clearfix">
</div>
